{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "<%= vpc_name %> <%= stack_type %> pipeline",
  "Parameters": {
    "Environment": {
      "Type": "String",
      "Description": "The environment being deployed (dev | prod | etc)"
    },
    "DevOpsBucket": {
      "Type": "String",
      "Description": "S3 bucket to use for artifacts. Just bucket Name; not URL. IAM user should have access to the bucket."
    },
    "GitHubToken": {
      "NoEcho": "true",
      "Type": "String",
      "Description": "https://github.com/settings/tokens"
    },
    "GitHubUser": {
      "NoEcho": "true",
      "Type": "String",
      "Description": "GitHub UserName"
    },
    "Repository": {
      "Type": "String",
      "Description": "GitHub Repository to pull from. Only the Name. not the URL"
    },
    "Branch": {
      "Type": "String",
      "Description": "Branch to use from Repository. Only the Name. not the URL",
      "Default": "master"
    },
    "AppName": {
      "Type": "String",
      "Description": "The app / project name"
    },
    "AppSource": {
      "Type": "String",
      "Description": "The app source URL. This is the HTTPS clone URL for GitHub."
    },
    "DeploymentGroupTagKey": {
      "Type": "String",
      "Description": "The EC2 tag key used to filter instances into a deployment group"
    },
    "DeploymentGroupTagValue": {
      "Type": "String",
      "Description": "The EC2 tag value used to filter instances into a deployment group"
    },
    "StackRole": {
      "Type": "String",
      "Description": "The stack role to add the deployment policy to"
    },
    "StackType": {
      "Type": "String",
      "Description": "The stack type"
    }
  },

  "Resources": {

    "CodePipelineRole": {
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument": {
          "Statement":[{
            "Sid":"1",
            "Effect":"Allow",
            "Principal":{
              "Service":[
                "codepipeline.amazonaws.com"
              ]
            },
            "Action":"sts:AssumeRole"
          }]
        },
        "Path":"/",
        "Policies":[{
          "PolicyName":"CodePipelinePolicy",
          "PolicyDocument":{
            "Version":"2012-10-17",
            "Statement": [{
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:GetBucketVersioning"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }, {
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::codepipeline*",
                "arn:aws:s3:::elasticbeanstalk*"
              ],
              "Effect": "Allow"
            }, {
              "Action": [
                "codecommit:CancelUploadArchive",
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:UploadArchive"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }, {
              "Action": [
                "codedeploy:CreateDeployment",
                "codedeploy:GetApplicationRevision",
                "codedeploy:GetDeployment",
                "codedeploy:GetDeploymentConfig",
                "codedeploy:RegisterApplicationRevision"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }, {
              "Action": [
                "elasticbeanstalk:*",
                "ec2:*",
                "elasticloadbalancing:*",
                "autoscaling:*",
                "cloudwatch:*",
                "s3:*",
                "sns:*",
                "cloudformation:*",
                "rds:*",
                "sqs:*",
                "ecs:*",
                "iam:PassRole"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }, {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:ListFunctions"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }, {
              "Action": [
                "opsworks:CreateDeployment",
                "opsworks:DescribeApps",
                "opsworks:DescribeCommands",
                "opsworks:DescribeDeployments",
                "opsworks:DescribeInstances",
                "opsworks:DescribeStacks",
                "opsworks:UpdateApp",
                "opsworks:UpdateStack"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }, {
              "Action": [
                "cloudformation:CreateStack",
                "cloudformation:DeleteStack",
                "cloudformation:DescribeStacks",
                "cloudformation:UpdateStack",
                "cloudformation:CreateChangeSet",
                "cloudformation:DeleteChangeSet",
                "cloudformation:DescribeChangeSet",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:SetStackPolicy",
                "cloudformation:ValidateTemplate",
                "iam:PassRole"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }, {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }, {
              "Action": ["*"],
              "Resource": "*",
              "Effect": "Allow"
            }]
          }
        }]
      }
    },

    "CodeBuildRole":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[{
            "Sid":"1",
            "Effect":"Allow",
            "Principal":{
              "Service":["codebuild.amazonaws.com"]
            },
            "Action":"sts:AssumeRole"
          }]
        },
        "Path": "/",
        "Policies":[{
          "PolicyName":"CodeDeployPolicy",
          "PolicyDocument":{
            "Statement":[{
              "Effect": "Allow",
              "Resource": [
                { "Fn::Join": [ "", [ "arn:aws:logs:", {"Ref": "AWS::Region" }, ":", {"Ref": "AWS::AccountId" }, ":",
                                "log-group:/aws/codebuild/", {"Ref": "AppName"} ] ] },
                { "Fn::Join": [ "", [ "arn:aws:logs:", {"Ref": "AWS::Region" }, ":", {"Ref": "AWS::AccountId" }, ":",
                                "log-group:/aws/codebuild/", {"Ref": "AppName"}, ":*" ] ] }
              ],
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ]
            }, {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket",
                "s3:GetObjectVersion",
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Resource": [
                { "Fn::Join": [ "", [ "arn:aws:s3:::", {"Ref": "DevOpsBucket" } ] ] },
                { "Fn::Join": [ "", [ "arn:aws:s3:::", {"Ref": "DevOpsBucket" }, "/*" ] ] }
              ]
            }]
          }
        }]
      }
    },

    "CodeDeployRole":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[{
            "Sid":"1",
            "Effect":"Allow",
            "Principal":{
              "Service":[
                { "Fn::Join": [ ".", [ "codedeploy", {"Ref": "AWS::Region" }, "amazonaws.com" ] ] }
              ]
            },
            "Action":"sts:AssumeRole"
          }]
        },
        "Path":"/",
        "Policies":[{
          "PolicyName":"CodeDeployPolicy",
          "PolicyDocument":{
            "Statement":[{
              "Effect": "Allow",
              "Action": [
                "autoscaling:CompleteLifecycleAction",
                "autoscaling:DeleteLifecycleHook",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeLifecycleHooks",
                "autoscaling:PutLifecycleHook",
                "autoscaling:RecordLifecycleActionHeartbeat",
                "autoscaling:CreateAutoScalingGroup",
                "autoscaling:UpdateAutoScalingGroup",
                "autoscaling:EnableMetricsCollection",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribePolicies",
                "autoscaling:DescribeScheduledActions",
                "autoscaling:DescribeNotificationConfigurations",
                "autoscaling:DescribeLifecycleHooks",
                "autoscaling:SuspendProcesses",
                "autoscaling:ResumeProcesses",
                "autoscaling:AttachLoadBalancers",
                "autoscaling:PutScalingPolicy",
                "autoscaling:PutScheduledUpdateGroupAction",
                "autoscaling:PutNotificationConfiguration",
                "autoscaling:PutLifecycleHook",
                "autoscaling:DescribeScalingActivities",
                "autoscaling:DeleteAutoScalingGroup",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:TerminateInstances",
                "tag:GetTags",
                "tag:GetResources",
                "sns:Publish",
                "cloudwatch:DescribeAlarms",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeInstanceHealth",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
              ],
              "Resource": "*"
            }]
          }
        }]
      }
    },

    "CodeBuildProject": {
      "Type":"AWS::CodeBuild::Project",
      "Properties":{
        "Name": {"Ref":"AppName"},
        "Description": "Build base application",
        "ServiceRole": {"Ref": "CodeBuildRole"},
        "Artifacts": {
          "Type": "no_artifacts"
        },
        "Environment":{
          "Type": "LINUX_CONTAINER",
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/java:openjdk-8"
        },
        "Source": {
          "Type": "CODEPIPELINE"
        },
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "TimeoutInMinutes": 10
      }
    },

    "Application":{
      "Type":"AWS::CodeDeploy::Application"
    },

    "DeploymentGroup": {
      "Type":"AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {"Ref":"Application"},
        "Ec2TagFilters":[{
          "Key": {"Ref": "DeploymentGroupTagKey"},
          "Value": {"Ref": "DeploymentGroupTagValue"},
          "Type": "KEY_AND_VALUE"
        }],
        "ServiceRoleArn": {"Fn::GetAtt" : ["CodeDeployRole", "Arn"] }
      }
    },

    "DeploymentPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "Roles": [ {"Ref": "StackRole"} ],
        "PolicyName": "codedeploy",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "s3:GetObject"
            ],
            "Resource": [
              { "Fn::Join": [ "", [ "arn:aws:s3:::", {"Ref": "DevOpsBucket" }, "/", {"Ref": "Environment"}, "-", {"Ref": "StackType"}, "-*" ] ] }
            ]
          }]
        }
      }
    },

    "CodePipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {"Fn::GetAtt" : [ "CodePipelineRole" , "Arn" ]},
        "ArtifactStore": {
          "Type":"S3",
          "Location": {"Ref": "DevOpsBucket"}
        },
        "Stages":[{
          "Name": "Source",
          "Actions":[{
            "Name": "Github",
            "InputArtifacts": [
            ],
            "ActionTypeId": {
              "Category": "Source",
              "Owner": "ThirdParty",
              "Version": "1",
              "Provider": "GitHub"
            },
            "OutputArtifacts":[{
              "Name": { "Fn::Join": [ "", [ {"Ref": "AppName"}, "-source" ] ] }
            }],
            "Configuration": {
              "Owner": {"Ref": "GitHubUser"},
              "Repo": {"Ref": "Repository"},
              "Branch": {"Ref":"Branch"},
              "OAuthToken": {"Ref":"GitHubToken"}
            },
            "RunOrder": 1
          }]
        }, {
          "Name":"Build",
          "Actions":[{
            "InputArtifacts":[{
              "Name": { "Fn::Join": [ "", [ {"Ref": "AppName"}, "-source" ] ] }
            }],
            "Name": "CodeBuild",
            "ActionTypeId": {
              "Category": "Build",
              "Owner": "AWS",
              "Version": "1",
              "Provider": "CodeBuild"
            },
            "OutputArtifacts":[{
              "Name": { "Fn::Join": [ "", [ {"Ref": "AppName"}, "-build" ] ] }
            }],
            "Configuration": {
              "ProjectName": {"Ref":"CodeBuildProject"}
            },
            "RunOrder":1
          }]
        }, {
          "Name":"Deploy",
          "Actions":[{
            "InputArtifacts":[{
              "Name": { "Fn::Join": [ "", [ {"Ref": "AppName"}, "-build" ] ] }
            }],
            "Name": "Production",
            "ActionTypeId":{
              "Category":"Deploy",
              "Owner":"AWS",
              "Version":"1",
              "Provider":"CodeDeploy"
            },
            "OutputArtifacts":[
            ],
            "Configuration":{
              "ApplicationName": {"Ref":"Application"},
              "DeploymentGroupName": {"Ref": "DeploymentGroup"}
            },
            "RunOrder":1
          }]
        }]
      }
    }
  },
  "Outputs":{
    "CodePipelineURL":{
      "Value":{
        "Fn::Join":[
          "",
          [
            "https://console.aws.amazon.com/codepipeline/home?region=",
            {
              "Ref":"AWS::Region"
            },
            "#/view/",
            {
              "Ref":"CodePipeline"
            }
          ]
        ]
      }
    }
  }
}
